// <auto-generated />
using System;
using GP.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GP.WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230409010921_tree")]
    partial class tree
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("GP.WebApi.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RepresentanteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("RepresentanteId");

                    b.ToTable("Fornecedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CNPJ = "12345478998 CNPJ",
                            Descricao = "Descrição TESTE",
                            Nome = "Fornecedor",
                            PedidoId = 1,
                            RepresentanteId = 2
                        },
                        new
                        {
                            Id = 2,
                            CNPJ = "CNPJ DO FORNECEDOR",
                            Descricao = "Descrição Fornecedor",
                            Nome = "Física",
                            PedidoId = 1,
                            RepresentanteId = 2
                        },
                        new
                        {
                            Id = 3,
                            CNPJ = "CNPJ DO FORNECEDOR",
                            Descricao = "Descrição Fornecedor",
                            Nome = "Português",
                            PedidoId = 1,
                            RepresentanteId = 3
                        },
                        new
                        {
                            Id = 4,
                            CNPJ = "CNPJ DO FORNECEDOR",
                            Descricao = "Descrição Fornecedor",
                            Nome = "Inglês",
                            PedidoId = 1,
                            RepresentanteId = 4
                        },
                        new
                        {
                            Id = 5,
                            CNPJ = "CNPJ DO FORNECEDOR",
                            Descricao = "Descrição Fornecedor",
                            Nome = "Programação",
                            PedidoId = 1,
                            RepresentanteId = 5
                        });
                });

            modelBuilder.Entity("GP.WebApi.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RepresentanteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RepresentanteId = 2
                        },
                        new
                        {
                            Id = 2,
                            RepresentanteId = 1
                        },
                        new
                        {
                            Id = 3,
                            RepresentanteId = 1
                        },
                        new
                        {
                            Id = 4,
                            RepresentanteId = 2
                        },
                        new
                        {
                            Id = 5,
                            RepresentanteId = 3
                        });
                });

            modelBuilder.Entity("GP.WebApi.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Codigo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataFabricacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Marca")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Peso")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Situacao")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = 23,
                            DataFabricacao = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataValidade = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descrição 01",
                            Marca = "MARCA",
                            Nome = "Marta",
                            Peso = "500",
                            Situacao = true
                        },
                        new
                        {
                            Id = 2,
                            Codigo = 456,
                            DataFabricacao = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataValidade = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descrição 02",
                            Marca = "MARCA",
                            Nome = "dsdsdsds",
                            Peso = "500",
                            Situacao = true
                        },
                        new
                        {
                            Id = 3,
                            Codigo = 789,
                            DataFabricacao = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataValidade = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descrição 03",
                            Marca = "MARCA",
                            Nome = "dsdsdsdsd",
                            Peso = "500",
                            Situacao = true
                        },
                        new
                        {
                            Id = 4,
                            Codigo = 121,
                            DataFabricacao = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataValidade = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descrição 04",
                            Marca = "MARCA",
                            Nome = "cvvcvcvvc",
                            Peso = "500",
                            Situacao = true
                        },
                        new
                        {
                            Id = 5,
                            Codigo = 365,
                            DataFabricacao = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataValidade = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descrição 05",
                            Marca = "MARCA",
                            Nome = "ddsfsdfdf",
                            Peso = "500",
                            Situacao = true
                        },
                        new
                        {
                            Id = 6,
                            Codigo = 98,
                            DataFabricacao = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataValidade = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descrição 06",
                            Marca = "MARCA",
                            Nome = "bvcvcgfsg",
                            Peso = "500",
                            Situacao = true
                        },
                        new
                        {
                            Id = 7,
                            Codigo = 654,
                            DataFabricacao = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataValidade = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descrição 07",
                            Marca = "MARCA",
                            Nome = "treteyte",
                            Peso = "500",
                            Situacao = true
                        });
                });

            modelBuilder.Entity("GP.WebApi.Models.ProdutoFornecedor", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProdutoId", "FornecedorId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("ProdutosFornecedores");

                    b.HasData(
                        new
                        {
                            ProdutoId = 1,
                            FornecedorId = 2
                        },
                        new
                        {
                            ProdutoId = 1,
                            FornecedorId = 4
                        },
                        new
                        {
                            ProdutoId = 1,
                            FornecedorId = 5
                        },
                        new
                        {
                            ProdutoId = 2,
                            FornecedorId = 1
                        },
                        new
                        {
                            ProdutoId = 2,
                            FornecedorId = 2
                        },
                        new
                        {
                            ProdutoId = 2,
                            FornecedorId = 5
                        },
                        new
                        {
                            ProdutoId = 3,
                            FornecedorId = 1
                        },
                        new
                        {
                            ProdutoId = 3,
                            FornecedorId = 2
                        },
                        new
                        {
                            ProdutoId = 3,
                            FornecedorId = 3
                        },
                        new
                        {
                            ProdutoId = 4,
                            FornecedorId = 1
                        },
                        new
                        {
                            ProdutoId = 4,
                            FornecedorId = 4
                        },
                        new
                        {
                            ProdutoId = 4,
                            FornecedorId = 5
                        },
                        new
                        {
                            ProdutoId = 5,
                            FornecedorId = 4
                        },
                        new
                        {
                            ProdutoId = 5,
                            FornecedorId = 5
                        },
                        new
                        {
                            ProdutoId = 6,
                            FornecedorId = 1
                        },
                        new
                        {
                            ProdutoId = 6,
                            FornecedorId = 2
                        },
                        new
                        {
                            ProdutoId = 6,
                            FornecedorId = 3
                        },
                        new
                        {
                            ProdutoId = 6,
                            FornecedorId = 4
                        },
                        new
                        {
                            ProdutoId = 7,
                            FornecedorId = 1
                        },
                        new
                        {
                            ProdutoId = 7,
                            FornecedorId = 2
                        },
                        new
                        {
                            ProdutoId = 7,
                            FornecedorId = 3
                        },
                        new
                        {
                            ProdutoId = 7,
                            FornecedorId = 4
                        },
                        new
                        {
                            ProdutoId = 7,
                            FornecedorId = 5
                        });
                });

            modelBuilder.Entity("GP.WebApi.Models.Representante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Representantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FornecedorId = 1,
                            Nome = "Lauro",
                            Telefone = "2799654985"
                        },
                        new
                        {
                            Id = 2,
                            FornecedorId = 2,
                            Nome = "Roberto",
                            Telefone = "2799654455"
                        },
                        new
                        {
                            Id = 3,
                            FornecedorId = 3,
                            Nome = "Ronaldo",
                            Telefone = "2799654125"
                        },
                        new
                        {
                            Id = 4,
                            FornecedorId = 4,
                            Nome = "Rodrigo",
                            Telefone = "2799658005"
                        },
                        new
                        {
                            Id = 5,
                            FornecedorId = 5,
                            Nome = "Alexandre",
                            Telefone = "2799652325"
                        });
                });

            modelBuilder.Entity("GP.WebApi.Models.RepresentantePedido", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProdutoId", "PedidoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("ProdutosPedidos");
                });

            modelBuilder.Entity("GP.WebApi.Models.Fornecedor", b =>
                {
                    b.HasOne("GP.WebApi.Models.Pedido", "Pedido")
                        .WithMany("Fornecedores")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GP.WebApi.Models.Representante", "Representante")
                        .WithMany("Fornecedores")
                        .HasForeignKey("RepresentanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GP.WebApi.Models.ProdutoFornecedor", b =>
                {
                    b.HasOne("GP.WebApi.Models.Fornecedor", "Fornecedor")
                        .WithMany("ProdutosFornecedores")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GP.WebApi.Models.Produto", "Produto")
                        .WithMany("ProdutosFornecedores")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GP.WebApi.Models.RepresentantePedido", b =>
                {
                    b.HasOne("GP.WebApi.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GP.WebApi.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
